{"version":3,"sources":["components/Blog.js","services/blogs.js","components/Blogs.js","components/LoginForm.js","components/NewBlogForm.js","components/Notification.js","components/Togglable.js","services/login.js","App.js","index.js"],"names":["Blog","blog","user","handleLike","handleRemove","useState","showDetails","setShowDetails","showWhenVisible","display","style","paddingTop","paddingLeft","border","borderWidth","marginBottom","className","title","author","onClick","url","likes","id","name","username","baseUrl","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","authorization","post","setToken","newToken","update","put","remove","delete","Blogs","blogs","setBlogs","setMessage","resetMessage","likedBlog","find","blogService","updatedBlog","updatedBlogs","indexOf","text","classname","error","blogToRemove","console","log","window","confirm","deletedBlog","filter","sort","b","map","LoginForm","password","setUsername","setPassword","handleLogin","onSubmit","type","value","onChange","target","NewBlogForm","blogFormRef","setTitle","setAuthor","setUrl","handleCreate","event","preventDefault","current","toggleVisibility","concat","Notification","message","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","useImperativeHandle","buttonLabel","children","displayName","login","credentials","App","setUser","useRef","useEffect","catch","loggedUserJSON","localStorage","getItem","JSON","parse","setTimeout","loginService","setItem","stringify","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.982238c0.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nconst Blog = ({ blog, user, handleLike, handleRemove }) => {\n  const [showDetails, setShowDetails] = useState(false)\n  const showWhenVisible = { display: showDetails ? '' : 'none' }\n\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5\n  }\n\n  return (\n    <div style={blogStyle} className='blog'>\n      <div className='blog-heading'>\n        {blog.title} - {blog.author} - <button className='view-button' onClick={() => setShowDetails(!showDetails)}>{showDetails ? 'hide' : 'view'}</button>\n      </div>\n      <div style={showWhenVisible} className='blog-details'>\n        <div className='url'>{blog.url}</div>\n        <div className='likes'>likes {blog.likes} <button className='like-button' onClick={() => handleLike(blog.id)}>like</button></div>\n        <div>{blog.user.name}</div>\n        {user.username === blog.user.username &&\n          <button className='remove-btn' onClick={() => handleRemove(blog.id)}>remove</button>\n        }\n      </div>\n    </div>\n  )\n}\n\n\nexport default Blog\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newBlog, config)\n\n  return response.data\n}\n\nconst update = async newBlog => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}/${newBlog.id}`, newBlog, config)\n\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n\n  return response.data\n}\n\nexport default { getAll , create, setToken, update, remove }\n","import React from 'react'\nimport Blog from './Blog'\nimport blogService from '../services/blogs'\n\nfunction Blogs({ blogs, setBlogs, user, setMessage, resetMessage }) {\n  const handleLike = async (id) => {\n    const likedBlog = blogs.find(blog => blog.id === id)\n\n    try {\n      const updatedBlog = await blogService.update({\n        id: likedBlog.id,\n        title: likedBlog.title,\n        author: likedBlog.author,\n        url: likedBlog.url,\n        likes: likedBlog.likes + 1\n      })\n\n      const updatedBlogs = [...blogs]\n      updatedBlogs[updatedBlogs.indexOf(likedBlog)] = updatedBlog\n\n      setBlogs(updatedBlogs)\n      setMessage({ text: `${likedBlog.title} liked`, classname: 'success' })\n      resetMessage()\n    } catch (error) {\n      setMessage({ text: error.response.data.error, classname: 'error' })\n      resetMessage()\n    }\n  }\n\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(blog => blog.id === id)\n    console.log(blogToRemove)\n\n    if(window.confirm(`Remove blog ${blogToRemove.title}! by ${blogToRemove.author}`)) {\n      try {\n        const deletedBlog = await blogService.remove(blogToRemove.id)\n        console.log(deletedBlog, 'removed')\n\n        const updatedBlogs = [...blogs]\n        setBlogs(updatedBlogs.filter(blog => blog.id !== blogToRemove.id))\n        setMessage({ text: `${blogToRemove.title} removed`, classname: 'success' })\n        resetMessage()\n      } catch (error) {\n        setMessage({ text: error.response.data.error, classname: 'error' })\n        resetMessage()\n      }\n    }\n  }\n\n  return (\n    <div id='bloglist'>\n      {blogs\n        .sort((a, b) => b.likes - a.likes)\n        .map(blog =>\n          <Blog\n            key={blog.id}\n            blog={blog}\n            user={user}\n            resetMessage={resetMessage}\n            setMessage={setMessage}\n            handleLike={handleLike}\n            handleRemove={handleRemove}/>\n        )}\n    </div>\n  )\n}\n\nexport default Blogs\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst LoginForm = ({ username, password, setUsername, setPassword, handleLogin }) => (\n  <div>\n    <h2>Log in to application</h2>\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n        <input\n          type=\"text\"\n          value={username}\n          id='username'\n          onChange={({ target }) => setUsername(target.value)}\n        />\n      </div>\n      <div>\n          password\n        <input\n          type=\"password\"\n          value={password}\n          id='password'\n          onChange={({ target }) => setPassword(target.value)}\n        />\n      </div>\n      <button id=\"login-button\" type=\"submit\">login</button>\n    </form>\n  </div>\n)\n\nLoginForm.propTypes = {\n  handleLogin: PropTypes.func.isRequired,\n  username: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired\n}\n\nexport default LoginForm\n","import React, { useState } from 'react'\nimport blogService from '../services/blogs'\n\nconst NewBlogForm = ({ blogs, setBlogs, setMessage, resetMessage, blogFormRef }) => {\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n\n    try {\n      const blog = await blogService.create({\n        title, author, url\n      })\n\n      blogFormRef.current.toggleVisibility()\n      setAuthor('')\n      setTitle('')\n      setUrl('')\n      setBlogs(blogs.concat(blog))\n      setMessage({ text: `A new blog ${blog.title} by ${blog.author} added.`, classname: 'success' })\n      resetMessage()\n    } catch (exception) {\n      setMessage({ text: exception.response.data.error, classname: 'error' })\n      console.log(exception.response.data)\n      resetMessage()\n    }\n  }\n\n  return (\n    <div>\n      <h2>Create new</h2>\n      <form onSubmit={handleCreate}>\n        <div>\n          title:\n          <input\n            id='title'\n            type=\"text\"\n            value = {title}\n            onChange = {({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          author:\n          <input\n            id='author'\n            type=\"text\"\n            value = {author}\n            onChange = {({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          url:\n          <input\n            id='url'\n            type=\"text\"\n            value = {url}\n            onChange = {({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button id ='create-blog-button' type=\"submit\">create</button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBlogForm\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) return null\n  return (\n    <div className = {message.classname}>\n      {message.text}\n    </div>\n  )\n}\n\nexport default Notification\n","import React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }\n","import React, { useState, useEffect, useRef } from 'react'\nimport Blogs from './components/Blogs'\nimport LoginForm from './components/LoginForm'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [message, setMessage] = useState(null)\n  const blogFormRef = useRef()\n\n  const fetchBlogs = () => {\n    blogService.getAll()\n      .then(blogs =>\n        setBlogs( blogs )\n      )\n      .catch(error => {\n        setMessage({ text: 'Could not connect to server', classname: 'error' })\n        console.log(error)\n        resetMessage()\n      })\n  }\n\n  useEffect(() => {\n    fetchBlogs()\n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      blogService.setToken(user.token)\n    }\n  }, [])\n\n  const resetMessage = () => setTimeout(() => setMessage(null), 5000)\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    try {\n      const user = await loginService.login({ username, password })\n\n      window.localStorage.setItem('loggedUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      setUser(user)\n      setMessage({ text: `Welcome ${user.name}`, classname: 'success' })\n      resetMessage()\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setMessage({ text: exception.response.data.error, classname: 'error' })\n      resetMessage()\n    }\n  }\n\n  const handleLogout = () => {\n    window.localStorage.removeItem('loggedUser')\n    setUser(null)\n    setMessage({ text: 'Successfully logged out', classname: 'success' })\n    resetMessage()\n  }\n\n  return (\n    <div>\n      <h1>Bloglist app</h1>\n      <Notification message = {message}/>\n\n      {user === null\n        ? <Togglable buttonLabel = 'login'>\n          <LoginForm\n            username = {username}\n            setUsername = {setUsername}\n            password = {password}\n            setPassword = {setPassword}\n            handleLogin = {handleLogin}\n          />\n        </Togglable>\n        : <div>\n          <div>\n            {user.name} logged in\n            <button onClick={handleLogout}>logout</button>\n          </div>\n          <Togglable buttonLabel = 'new blog' ref={blogFormRef}>\n            <NewBlogForm\n              blogs = {blogs}\n              setBlogs = {setBlogs}\n              setMessage = {setMessage}\n              resetMessage = {resetMessage}\n              blogFormRef = {blogFormRef}\n            />\n          </Togglable>\n\n          <Blogs\n            blogs={blogs}\n            setBlogs={setBlogs}\n            user={user}\n            setMessage={setMessage}\n            resetMessage={resetMessage}\n          />\n        </div>\n      }\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}
{"version":3,"sources":["reducers/notificationReducer.js","services/blogs.js","services/comments.js","reducers/blogsReducer.js","services/login.js","services/users.js","reducers/userReducer.js","reducers/usersReducer.js","store.js","components/Navbar.js","components/BlogCard.js","components/User.js","components/Users.js","hooks/useField.js","components/Blog.js","components/Blogs.js","utilities/resetFields.js","components/LoginForm.js","components/RegisterForm.js","components/NewBlogForm.js","components/Notification.js","components/Togglable.js","App.js","index.js"],"names":["timeoutID","baseUrl","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","authorization","post","setToken","newToken","update","put","id","remove","delete","setMessage","text","classname","dispatch","clearInterval","type","setTimeout","initialState","reducer","state","action","blogId","comment","content","blogService","title","url","author","blog","error","deleteBlog","likeBlog","likedBlog","likes","updatedBlog","newComment","commentService","filter","map","login","credentials","register","loginUser","user","loginService","window","localStorage","setItem","JSON","stringify","name","registerUser","userService","combineReducers","blogs","blogsReducer","messages","notificationReducer","userReducer","users","usersReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","Navbar","useSelector","useDispatch","AppBar","position","Toolbar","IconButton","edge","color","aria-label","Button","component","RouterLink","to","onClick","removeItem","useStyles","makeStyles","card","marginTop","marginBottom","BlogCard","classes","Card","className","elevation","CardHeader","subheader","CardActions","size","Typography","comments","length","User","variant","gutterBottom","Users","useEffect","TableContainer","Paper","Table","TableHead","TableRow","TableCell","TableBody","Link","username","useField","useState","value","setValue","onChange","event","target","reset","Blog","history","useHistory","handleLike","find","handleRemove","blogToRemove","push","handleSubmit","e","preventDefault","commentToBeAdded","CardContent","href","endIcon","onSubmit","autoComplete","TextField","fullWidth","List","ListItem","button","ListItemText","indexOf","Blogs","sort","b","handleReset","fields","LoginForm","password","handleLogin","label","RegisterForm","blogFormRef","regName","regUsername","regPassword","handleRegister","current","toggleVisibility","NewBlogForm","handleCreate","Notification","message","Alert","severity","Togglable","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","useImperativeHandle","style","buttonLabel","children","displayName","App","useRef","usersMatch","useRouteMatch","blogsMatch","matchingUser","params","matchingBlog","loggedUserJSON","getItem","userFromStorage","parse","setUser","Container","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f864257.chunk.js","sourcesContent":["let timeoutID\n\nexport const setMessage = ({ text, classname }) => {\n  const DISPLAY_DURATION = 5000\n\n  return async dispatch => {\n    if(timeoutID) clearInterval(timeoutID)\n\n    dispatch({\n      type: 'SET_MESSAGE',\n      data: {\n        text,\n        classname\n      }\n    })\n\n    timeoutID = setTimeout(() => {\n      dispatch({\n        type: 'RESET_MESSAGE'\n      })\n    }, DISPLAY_DURATION)\n  }\n}\n\nconst initialState = null\n\nconst reducer = (state = initialState, action) => {\n  switch(action.type) {\n  case 'SET_MESSAGE' : {\n    return {\n      text: action.data.text,\n      classname: action.data.classname\n    }\n  }\n  case 'RESET_MESSAGE' : {\n    return initialState\n  }\n\n  default: return state\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = () => {\n  const request = axios.get('/api/blogs')\n  return request.then(response => response.data)\n}\n\nconst create = async newBlog => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.post(baseUrl, newBlog, config)\n\n  return response.data\n}\n\nconst update = async newBlog => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.put(`${baseUrl}/${newBlog.id}`, newBlog, config)\n\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n\n  return response.data\n}\n\nexport default { getAll , create, setToken, update, remove }\n","import axios from 'axios'\n\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (blogId, comment) => {\n  const config = {\n    headers: { authorization: token }\n  }\n\n  const response = await axios.post(`${baseUrl}/${blogId}/comments`, comment, config)\n\n  return response.data\n}\n\nexport default { create, setToken }\n","import blogService from '../services/blogs'\nimport { setMessage } from './notificationReducer'\nimport commentService from '../services/comments'\n\nexport const initializeBlogs = () => {\n  return async dispatch => {\n    try {\n      const blogs = await blogService.getAll()\n      dispatch({\n        type: 'INIT_BLOGS',\n        data: blogs\n      })\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const newBlog = (content) => {\n  return async dispatch => {\n    try {\n      const blog = await blogService.create({\n        title: content.title,\n        url: content.url,\n        author: content.author,\n      })\n      dispatch({\n        type: 'NEW_BLOG',\n        data: blog\n      })\n      dispatch(setMessage({\n        text: `A new blog ${blog.title} by ${blog.author} added.`,\n        classname: 'success'\n      })\n      )\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const deleteBlog = (blog) => {\n  return async dispatch => {\n    try {\n      await blogService.remove(blog.id)\n      dispatch({\n        type: 'DELETE_BLOG',\n        data: blog\n      })\n      dispatch(setMessage({\n        text: `${blog.title} removed`,\n        classname: 'success'\n      }))\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const likeBlog = (likedBlog) => {\n  return async dispatch => {\n    try {\n      const updatedBlog = await blogService.update({ ...likedBlog, likes: likedBlog.likes + 1 })\n      dispatch({\n        type: 'LIKE_BLOG',\n        data: updatedBlog\n      })\n      dispatch(setMessage({\n        text: `${updatedBlog.title} liked`,\n        classname: 'success'\n      }))\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const newComment = (id, comment) => {\n  return async dispatch => {\n    try {\n      const response = await commentService.create(id, comment)\n      dispatch({\n        type: 'NEW_COMMENT',\n        data: response\n      })\n      dispatch(setMessage({\n        text: 'Your comment has been saved',\n        classname: 'success'\n      }))\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n\n  }\n}\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n  case 'INIT_BLOGS' : {\n    return action.data\n  }\n\n  case 'NEW_BLOG' : {\n    return [...state, action.data]\n  }\n\n  case 'DELETE_BLOG': {\n    return state.filter(blog => blog.id !== action.data.id)\n  }\n\n  case 'LIKE_BLOG': {\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\n  }\n\n  case 'NEW_COMMENT': {\n    return state.map(blog => blog.id !== action.data.id ? blog : action.data)\n  }\n\n  default: return state\n  }\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = 'api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = 'api/users'\n\nconst register = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n\n  return response.data\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n\n  return response.data\n}\n\n\nexport default { register, getAll }\n","import loginService from '../services/login'\nimport blogService from '../services/blogs'\nimport userService from '../services/users'\nimport { setMessage } from './notificationReducer'\n\nexport const loginUser = (user) => {\n  return async dispatch => {\n    try {\n      const response = await loginService.login(user)\n      window.localStorage.setItem('loggedUser', JSON.stringify(response))\n      blogService.setToken(response.token)\n      dispatch({\n        type: 'LOGIN_USER',\n        data: response\n      })\n      dispatch(setMessage({\n        text: `Welcome ${response.name}`,\n        classname: 'success' })\n      )\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const registerUser = (user) => {\n  return async dispatch => {\n    try {\n      const response = await userService.register(user)\n      dispatch({\n        type: 'REGISTER_USER',\n        data: response\n      })\n      dispatch(setMessage({\n        text: `Successfully registered ${response.name}`,\n        classname: 'success'\n      }))\n    } catch (e) {\n      dispatch(setMessage({ text: e.response.data.error, classname: 'error' }))\n    }\n  }\n}\n\nexport const setUser = (user) => {\n  return {\n    type: 'SET_USER',\n    data: user\n  }\n}\n\nexport const logoutUser = () => {\n  return dispatch => {\n    window.localStorage.removeItem('loggedUser')\n    dispatch({\n      type: 'LOGOUT_USER'\n    })\n    dispatch(setMessage({\n      text: 'Successfully logged out',\n      classname: 'success'\n    }))\n  }\n}\n\nconst initialState = null\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n  case 'LOGIN_USER':\n    return action.data\n\n  case 'SET_USER':\n    return action.data\n\n  case 'LOGOUT_USER':\n    return initialState\n\n  default: return state\n  }\n}\n\nexport default reducer\n","import userService from '../services/users'\n\nexport const getUsers = () => {\n  return async dispatch => {\n    const users = await userService.getAll()\n    dispatch({\n      type: 'INIT_USERS',\n      data: users\n    })\n  }\n}\n\nconst reducer = (state = [], action) => {\n  switch(action.type) {\n  case 'INIT_USERS': {\n    return action.data\n  }\n\n  default: return state\n  }\n}\n\nexport default reducer\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport blogsReducer from './reducers/blogsReducer'\nimport notificationReducer from './reducers/notificationReducer'\nimport userReducer from './reducers/userReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  messages: notificationReducer,\n  user: userReducer,\n  users: usersReducer\n})\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  ))\n\nexport default store\n","import React from 'react'\nimport { Link  as RouterLink } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logoutUser } from '../reducers/userReducer'\n\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\n\nfunction Navbar() {\n  const user = useSelector(state => state.user)\n  const dispatch = useDispatch()\n\n  const handleLogout = () => dispatch(logoutUser())\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\">\n        </IconButton>\n        <Button color=\"inherit\" component={RouterLink} to='/'>\n          home\n        </Button>\n        <Button color=\"inherit\" component={RouterLink} to='/users'>\n          users\n        </Button>\n        {user\n          ? <Button onClick={handleLogout} color=\"inherit\" component={RouterLink} to='/'>logout</Button>\n          : null\n        }\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Navbar\n","import React from 'react'\nimport { Button, Card, CardActions,  CardHeader, Typography, makeStyles } from '@material-ui/core'\nimport { Link as RouterLink } from 'react-router-dom'\n\nconst useStyles = makeStyles({\n  card: {\n    marginTop: 5,\n    marginBottom: 5,\n  }\n})\n\nfunction BlogCard({ blog }) {\n  const classes = useStyles()\n\n  return (\n    <div>\n      <Card key={blog.id} className={classes.card} elevation={3}>\n        <CardHeader\n          title={blog.title}\n          subheader={`Author: ${blog.author}`}\n        />\n        <CardActions>\n          <Button component={RouterLink} to={`/blogs/${blog.id}`} size=\"small\" color=\"primary\">\n            Show more\n          </Button>\n          <Typography color='textSecondary'>\n            {blog.likes} likes\n          </Typography>\n          <Typography color='textSecondary'>\n            {blog.comments.length} comments\n          </Typography>\n        </CardActions>\n      </Card>\n    </div>\n  )\n}\n\nexport default BlogCard\n","import { Typography } from '@material-ui/core'\nimport React from 'react'\nimport BlogCard from './BlogCard'\n\nfunction User({ user } ){\n  if(!user) return null\n\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n        {`${user.name}'s blogs`}\n      </Typography>\n      {user.blogs.map(blog =>\n        <BlogCard blog={blog} key={blog.id}/>\n      )}\n    </div>\n  )\n}\n\nexport default User\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { getUsers } from '../reducers/usersReducer'\nimport {\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableRow,\n  Paper,\n  Link,\n  Typography\n} from '@material-ui/core'\n\nfunction Users() {\n  const users = useSelector(state => state.users)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getUsers())\n  }, [])\n\n  if(!users) {\n    return null\n  }\n\n  return (\n    <div>\n      <Typography variant=\"h2\" component=\"h2\" gutterBottom>\n        Users\n      </Typography>\n      <TableContainer component={Paper}>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Username</TableCell>\n              <TableCell>Number of blogs</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {users.map(user => (\n              <TableRow key={user.id}>\n                <TableCell>\n                  <Link component={RouterLink} to={`/users/${user.id}`}>{user.username}</Link>\n                </TableCell>\n                <TableCell>\n                  {user.blogs.length}\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </div>\n  )\n}\n\nexport default Users\n","import { useState } from 'react'\n\nconst useField = (type, id) => {\n  const [value, setValue] = useState('')\n\n  const onChange = (event) => {\n    setValue(event.target.value)\n  }\n\n  const reset = () => {\n    setValue('')\n  }\n\n  return {\n    type,\n    id,\n    value,\n    onChange,\n    reset\n  }\n}\n\nexport default useField\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { likeBlog, deleteBlog, newComment } from '../reducers/blogsReducer'\nimport useField from '../hooks/useField'\nimport { Link as RouterLink } from 'react-router-dom'\nimport { Button, Card, CardContent, CardHeader, CardActions, Typography, TextField, List, ListItem, ListItemText, Link } from '@material-ui/core'\nimport ThumbUpIcon from '@material-ui/icons/ThumbUp'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst Blog = ({ blog }) => {\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const user = useSelector(state => state.user)\n  const blogs = useSelector(state => state.blogs)\n  const comment = useField('textarea', 'comment')\n\n  const handleLike = async (id) => {\n    const likedBlog = blogs.find(blog => blog.id === id)\n\n    dispatch(likeBlog(likedBlog))\n  }\n\n  const handleRemove = async (id) => {\n    const blogToRemove = blogs.find(blog => blog.id === id)\n\n    dispatch(deleteBlog(blogToRemove))\n    history.push('/')\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n\n    const commentToBeAdded = {\n      comment: comment.value\n    }\n\n    comment.reset()\n    dispatch(newComment(blog.id, commentToBeAdded))\n  }\n\n  if(!blog) return null\n\n  return (\n    <div>\n      <Card className='blog' elevation={3}>\n        <CardHeader\n          title={blog.title}\n          subheader={`Author ${blog.author}`}\n        />\n        <CardContent>\n          <Typography component=\"a\" href={blog.url}>\n            {blog.url}\n          </Typography>\n          <Typography>\n          Likes: {blog.likes}\n          </Typography>\n          <Typography>\n          Added by user:\n            <Link component={RouterLink} to={`/users/${blog.user.id}`}>{blog.user.name}</Link>\n          </Typography>\n          <br/>\n        </CardContent>\n        <CardActions>\n          <Button\n            onClick={() => handleLike(blog.id)}\n            color=\"primary\"\n            variant=\"outlined\"\n            endIcon={<ThumbUpIcon/>}>\n          Like\n          </Button>\n          {user.username === blog.user.username &&\n          <Button\n            onClick={() => handleRemove(blog.id)}\n            variant=\"outlined\"\n            color=\"secondary\"\n            endIcon={<DeleteIcon/>}>\n            remove\n          </Button>\n          }\n        </CardActions>\n        <CardContent>\n          <form onSubmit={handleSubmit} autoComplete=\"off\">\n            <TextField variant=\"outlined\" fullWidth {...comment } reset={null}/>\n            <Button id ='add-comment-button' type='submit' variant=\"outlined\" color=\"primary\">add comment</Button>\n          </form>\n          <Typography variant=\"h6\" component=\"h3\">\n          Comments:\n          </Typography>\n          <List>\n            {blog.comments.map(comment =>\n              <ListItem button key={blog.comments.indexOf(comment)}><ListItemText>{comment}</ListItemText></ListItem>\n            )}\n          </List>\n        </CardContent>\n      </Card>\n    </div>\n\n  )\n}\n\n\nexport default Blog\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport BlogCard from './BlogCard'\n\nfunction Blogs() {\n  const blogs = useSelector(state => state.blogs)\n\n  return (\n    <div id='bloglist'>\n      {blogs\n        .sort((a, b) => b.likes - a.likes)\n        .map(blog =>\n          <BlogCard blog={blog} key={blog.id}/>\n        )}\n    </div>\n  )\n}\n\nexport default Blogs\n","const handleReset = (fields) => {\n  for (const field of fields) {\n    field.reset()\n  }\n}\n\nexport default handleReset\n","import React from 'react'\nimport useField from '../hooks/useField'\nimport { useDispatch } from 'react-redux'\nimport { loginUser } from '../reducers/userReducer'\nimport handleReset from '../utilities/resetFields'\nimport { Button, TextField, Typography } from '@material-ui/core'\n\nconst LoginForm = () => {\n  const dispatch = useDispatch()\n  const username = useField('text', 'username')\n  const password = useField('password', 'password')\n  const fields = [username, password]\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      username: username.value,\n      password: password.value\n    }\n\n    dispatch(loginUser(user))\n    handleReset(fields)\n  }\n\n  return (\n    <div>\n      <Typography\n        variant=\"h2\"\n        component=\"h2\"\n        gutterBottom>\n        Log in to application\n      </Typography>\n      <form onSubmit={handleLogin} autoComplete=\"off\">\n        <TextField variant=\"outlined\" fullWidth {...username} label=\"username\" reset={null} />\n        <TextField variant=\"outlined\" fullWidth {...password} label=\"password\" reset={null} />\n        <Button id=\"login-button\" variant=\"outlined\" color=\"primary\" type=\"submit\">login</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default LoginForm\n","import React from 'react'\nimport { registerUser } from '../reducers/userReducer'\nimport { useDispatch } from 'react-redux'\nimport useField from '../hooks/useField'\nimport handleReset from '../utilities/resetFields'\nimport { Button, TextField, Typography } from '@material-ui/core'\n\nfunction RegisterForm({ blogFormRef }) {\n  const dispatch = useDispatch()\n  const regName = useField('text', 'reg-name')\n  const regUsername = useField('text', 'reg-username')\n  const regPassword = useField('password', 'reg-password')\n  const fields = [regName, regUsername, regPassword]\n\n  const handleRegister = async (event) => {\n    event.preventDefault()\n\n    const user = {\n      name: regName.value,\n      password: regPassword.value,\n      username: regUsername.value\n    }\n\n    dispatch(registerUser(user))\n    blogFormRef.current.toggleVisibility()\n    handleReset(fields)\n  }\n\n  return (\n    <div>\n      <Typography\n        variant=\"h2\"\n        component=\"h2\"\n        gutterBottom>\n        Register an account\n      </Typography>\n      <form onSubmit={handleRegister} autoComplete=\"off\">\n        <TextField variant=\"outlined\" fullWidth label=\"name\" {...regName} reset={null} />\n        <TextField variant=\"outlined\" fullWidth label=\"username\" {...regUsername} reset={null} />\n        <TextField variant=\"outlined\" fullWidth label=\"password\" {...regPassword} reset={null} />\n        <Button variant=\"outlined\" color=\"primary\" id=\"register-button\" type=\"submit\">register</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default RegisterForm\n","import { Button, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\nimport { useDispatch } from 'react-redux'\nimport useField from '../hooks/useField'\nimport { newBlog } from '../reducers/blogsReducer'\nimport handleReset from '../utilities/resetFields'\n\nconst NewBlogForm = ({ blogFormRef }) => {\n  const dispatch = useDispatch()\n  const title = useField('text', 'title')\n  const author = useField('text', 'author')\n  const url = useField('text', 'url')\n  const fields = [title, author, url]\n\n  const handleCreate = async (event) => {\n    event.preventDefault()\n\n    const blog = {\n      title: title.value,\n      author: author.value,\n      url: url.value\n    }\n\n    dispatch(newBlog(blog))\n    blogFormRef.current.toggleVisibility()\n    handleReset(fields)\n  }\n\n  return (\n    <div>\n      <Typography\n        variant=\"h6\"\n        component=\"h3\">\n        Create new blog\n      </Typography>\n      <form onSubmit={handleCreate} autoComplete=\"off\">\n        <TextField variant=\"outlined\" fullWidth label=\"title\" {...title} reset={null} />\n        <TextField variant=\"outlined\" fullWidth label=\"author\" {...author} reset={null}/>\n        <TextField variant=\"outlined\" fullWidth label=\"url\" {...url} reset={null}/>\n        <Button variant=\"outlined\" color=\"primary\" id ='create-blog-button' type=\"submit\">create</Button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewBlogForm\n","import React from 'react'\nimport { useSelector } from 'react-redux'\nimport { Alert } from '@material-ui/lab'\n\n\nconst Notification = () => {\n  const message = useSelector(state => state.messages)\n\n  if (message === null) return null\n\n  return (\n    <div>\n      <Alert severity = {message.classname}>\n        {message.text}\n      </Alert>\n    </div>\n\n  )\n}\n\nexport default Notification\n","import React, { useState, useImperativeHandle, forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from '@material-ui/core'\n\nconst Togglable = forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button variant=\"outlined\" color=\"default\" onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button variant=\"outlined\" color=\"secondary\" onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\nTogglable.displayName = 'Togglable'\n\nexport default Togglable\n","import React, { useEffect, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Switch, Route, useRouteMatch } from 'react-router-dom'\nimport { initializeBlogs } from './reducers/blogsReducer'\nimport { setUser } from './reducers/userReducer'\nimport Navbar from './components/Navbar'\nimport User from './components/User'\nimport Users from './components/Users'\nimport Blog from './components/Blog'\nimport Blogs from './components/Blogs'\nimport LoginForm from './components/LoginForm'\nimport RegisterForm from './components/RegisterForm'\nimport NewBlogForm from './components/NewBlogForm'\nimport Notification from './components/Notification'\nimport Togglable from './components/Togglable'\nimport blogService from './services/blogs'\nimport { Container, Typography } from '@material-ui/core'\n\nconst App = () => {\n  const user = useSelector(state => state.user)\n  const users = useSelector(state => state.users)\n  const blogs = useSelector(state => state.blogs)\n  const blogFormRef = useRef()\n  const dispatch = useDispatch()\n  const usersMatch = useRouteMatch('/users/:id')\n  const blogsMatch = useRouteMatch('/blogs/:id')\n  const matchingUser = usersMatch\n    ? users.find(user => user.id === usersMatch.params.id)\n    : null\n  const matchingBlog = blogsMatch\n    ? blogs.find(user => user.id === blogsMatch.params.id)\n    : null\n\n  useEffect(() => {\n    dispatch(initializeBlogs())\n    const loggedUserJSON = window.localStorage.getItem('loggedUser')\n\n    if (loggedUserJSON) {\n      const userFromStorage = JSON.parse(loggedUserJSON)\n      dispatch(setUser(userFromStorage))\n      blogService.setToken(userFromStorage.token)\n    }\n  }, [])\n\n  if(!user) {\n    return (\n      <Container>\n        <Navbar/>\n        <Typography\n          variant=\"h1\"\n          component=\"h1\"\n          gutterBottom>\n        Bloglist app\n        </Typography>\n        <Notification/>\n        <Togglable buttonLabel = 'login'>\n          <LoginForm/>\n        </Togglable>\n        <Togglable buttonLabel = 'register' ref={blogFormRef}>\n          <RegisterForm blogFormRef = {blogFormRef}/>\n        </Togglable>\n      </Container>\n    )\n  }\n\n  return (\n    <Container>\n      <Navbar/>\n      <Typography\n        variant=\"h1\"\n        component=\"h1\"\n        gutterBottom>\n      Bloglist app\n      </Typography>\n      <Notification/>\n      <Switch>\n        <Route path='/blogs/:id'>\n          <Blog blog={matchingBlog}/>\n        </Route>\n        <Route path='/users/:id'>\n          <User user={matchingUser}/>\n        </Route>\n        <Route path='/users'>\n          <Users/>\n        </Route>\n        <Route path='/'>\n          <Togglable buttonLabel = 'new blog' ref={blogFormRef}>\n            <NewBlogForm blogFormRef = {blogFormRef} />\n          </Togglable>\n          <Blogs/>\n        </Route>\n      </Switch>\n    </Container>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport store from './store'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}